import React from 'react';
import Head from "next/head";
// import {Footer, Navbar, Sidebar} from "../../../components/ui/client";
import {Box, TextField, Typography, InputAdornment, IconButton, Button, useMediaQuery} from "@mui/material";
import {AuthContext} from "../../../context/auth";
import VisibilityOffIcon from '@mui/icons-material/VisibilityOff';
import VisibilityIcon from '@mui/icons-material/Visibility';
import NextLink from 'next/link'

export default function Login() {
  const {login, loading} = React.useContext(AuthContext)
  const largeScreen = useMediaQuery((theme: any) => theme.breakpoints.up('md'))
  const [showPassword, setShowPassword] = React.useState(false);
  const [userData, setUserData] = React.useState({
    email: '',
    password: ''
  })

  function changeUserData(type: string, value: string) {
    setUserData(prevState => ({
      ...prevState,
      [type]: value
    }))
  }
  return (
    <Box sx={{ flexFlow: 1}}>
      <Head>
        <title>Inicio de sesión | Vision Inmobiliaria</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Box
        sx={{
          height: '100vh',
          display: 'flex',
          position: 'relative',
          flexDirection: largeScreen ? 'row' : 'column'
        }}
      >
        <Box
          sx={{
            flex: 0.4,
            backgroundColor: 'primary.main',
            position: 'relative',
            backgroundImage:`url('/images/sidebar-5.jpg')`,
            backgroundRepeat: 'no-repeat',
            backgroundSize: 'cover',
            backgroundPosition: 'center center',
          }}
        />
        <Box sx={{flex: 0.6, display: 'flex', alignItems: largeScreen ? 'center' : 'flex-start', mt: largeScreen ? 0 : 5, justifyContent: 'center'}}>
          <Box width={largeScreen ? 450 : '100%'} p={2}>
            <Typography align='center' variant='h6'>Inicio de sesión</Typography>
            <Box mt={5}>
              <TextField
                color='secondary'
                fullWidth
                sx={{mt: 2}}
                id="user-name-textfield"
                placeholder='Email'
                value={userData.email}
                onChange={(e) => changeUserData('email', e.target.value)}
                label='Email'
                variant="outlined"
              />
              <TextField
                color='secondary'
                fullWidth
                type={showPassword ? 'text' : 'password'}
                sx={{mt: 2}}
                id="user-name-textfield"
                placeholder='Contraseña'
                value={userData.password}
                onChange={(e) => changeUserData('password', e.target.value)}
                label='Contraseña'
                variant="outlined"
                InputProps={{
                  endAdornment:
                    <InputAdornment position="end">
                      <IconButton onClick={() => setShowPassword(!showPassword)}>
                        {showPassword ? (<VisibilityOffIcon />) : (<VisibilityIcon />)}
                      </IconButton>
                    </InputAdornment>,
                }}
              />
            </Box>
            <Box display='flex' justifyContent='center' mt={5}>
              <NextLink href='/autenticacion/recuperar-credenciales'>
                Olvide mi contraseña
              </NextLink>
            </Box>
            <Box  mt={5} display='flex' justifyContent='center' onClick={() => login(userData)}>
              <Button disabled={loading} variant='contained'>{loading ? 'Iniciando sesión...' : 'Iniciar sesión'}</Button>
            </Box>
          </Box>
        </Box>

      </Box>
      {/*<Footer />*/}
    </Box>    )
}
